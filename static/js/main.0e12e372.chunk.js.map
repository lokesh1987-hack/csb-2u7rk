{"version":3,"sources":["Redux/changeSlice.js","Input.js","Output.js","App.js","index.js"],"names":["changeSlice","createSlice","name","initialState","value","reducers","add","state","action","payload","del","arr","filter","item","index","in","actions","Input","useState","task","setTask","describe","setDescribe","date","setDate","disp","useDispatch","className","onChange","event","target","type","onClick","Output","mystate","useSelector","desp","dateCheck","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","formatDate","scope","map","replace","App","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e12e372.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  value: []\r\n};\r\n\r\nconst changeSlice = createSlice({\r\n  name: \"second\",\r\n  initialState,\r\n  reducers: {\r\n    add: (state, action) => {\r\n      state.value = [...state.value, action.payload];\r\n    },\r\n    del: (state, action) => {\r\n      var arr = state.value.filter((item, index) => {\r\n        return index !== action.payload.in;\r\n      });\r\n      state.value = arr;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { add, del } = changeSlice.actions;\r\nexport default changeSlice.reducer;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { add } from \"./Redux/changeSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction Input() {\r\n  const [task, setTask] = useState(\"\");\r\n  const [describe, setDescribe] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const disp = useDispatch();\r\n\r\n  return (\r\n    <div className=\"container-sm container-md\">\r\n      <div className=\"h1 text-center mt-3 mb-3\">To Do List</div>\r\n      <div className=\"row\">\r\n        <div className=\"input-group col-sm-3 mt-3 mb-3 justify-content-center\">\r\n          <span className=\"input-group-text\">Task</span>\r\n          <input\r\n            className=\"col-sm-3\"\r\n            aria-label=\"task\"\r\n            onChange={(event) => {\r\n              setTask(event.target.value);\r\n            }}\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <div className=\"input-group col-sm-3 mt-3 mb-3 justify-content-center\">\r\n          <span className=\"input-group-text\">Description</span>\r\n          <input\r\n            className=\"col-sm-3\"\r\n            aria-label=\"Description\"\r\n            onChange={(event) => {\r\n              setDescribe(event.target.value);\r\n            }}\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <div className=\"input-group col-sm-3 mt-3 mb-3 justify-content-center\">\r\n          <span className=\"input-group-text\">Pick Date</span>\r\n          <input\r\n            className=\"col-sm-3\"\r\n            aria-label=\"Pick_Date\"\r\n            onChange={(event) => {\r\n              setDate(event.target.value);\r\n            }}\r\n            type=\"date\"\r\n          />\r\n        </div>\r\n        <div className=\"d-flex justify-content-center mt-3 mb-3\">\r\n          <button\r\n            className=\"btn btn-primary col-sm-3\"\r\n            onClick={() => {\r\n              disp(add({ task: task, describe: describe, date: date }));\r\n            }}\r\n          >\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { del } from \"./Redux/changeSlice\";\r\n\r\nfunction Output() {\r\n  const mystate = useSelector((state) => state.changeSlice);\r\n  const desp = useDispatch();\r\n  let dateCheck = \"\";\r\n  let current_date = new Date();\r\n  function formatDate(date) {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n    dateCheck = year + month + day;\r\n\r\n    return [year, month, day].join(\"-\");\r\n  }\r\n\r\n  let currentDate = formatDate(current_date);\r\n  return (\r\n    <div className=\"m-5 text-center\">\r\n      <table className=\"table table-bordered border-primary\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">No.</th>\r\n            <th scope=\"col\">Task</th>\r\n            <th scope=\"col\">Description</th>\r\n            <th scope=\"col\">Date</th>\r\n            <th scope=\"col\">Submition Date</th>\r\n            <th scope=\"col\">Submition Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {mystate.value.map((item, index) => {\r\n            return (\r\n              // <div>\r\n              <tr key={index}>\r\n                <th scope=\"row\">{index}</th>\r\n                <td>{item.task}</td>\r\n                <td>{item.describe}</td>\r\n                <td>{item.date}</td>\r\n\r\n                <td>\r\n                  {item.date.replace(/-/g, \"\") === dateCheck ? (\r\n                    <p>Due Date is Today</p>\r\n                  ) : item.date.replace(/-/g, \"\") <= dateCheck ? (\r\n                    <p>Due Date is Today</p>\r\n                  ) : null}\r\n                </td>\r\n\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => {\r\n                      desp(del({ in: index }));\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              // </div>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Output;\r\n","import Input from \"./Input\";\n\nimport Output from \"./Output\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Input />\n      <Output />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport changeSlice from \"./Redux/changeSlice\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nconst store = configureStore({ reducer: { changeSlice } });\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}